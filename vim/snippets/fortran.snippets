###############
#  Structure  #
###############
snippet mod "module" !b
module ${1:`!v expand("%:t:r")`}
implicit none
${0}
contains

end module $1
endsnippet

snippet prog "program" !b
program ${1:`!v expand("%:t:r")`}
implicit none
${0}
contains

end program $1
endsnippet

##################
#  Declarations  #
##################
snippet fun "function definion" !b
function ${1:function_name}(${3}) result(${2:$1})
   implicit none
	${0}
end function $1
endsnippet

snippet sub "subroutine definition" !b
subroutine ${1:subroutine_name}(${2})
   implicit none
	${0}
end subroutine $1
endsnippet

snippet in "intent(in)" w
intent(in)
endsnippet

snippet out "intent(out)" w
intent(out)
endsnippet

####################
#  Variable types  #
####################
snippet int "integer" w
integer${1} :: ${2}
endsnippet

snippet ty "type()" w
type(${1}) :: ${2}
endsnippet

snippet rs "real(sp)" w
real(sp)${1} :: ${2}
endsnippet
snippet rd "real(dp)" w
real(dp)${1} :: ${2}
endsnippet

snippet cs "complex(sp)" w
complex(sp)${1} :: ${2}
endsnippet
snippet cd "complex(dp)" w
complex(dp)${1} :: ${2}
endsnippet

snippet proc "procedure" w
procedure${1} :: ${2}
endsnippet

##################
#  Flow control  #
##################
snippet if "if" b
if (${1}) then
   ${0}
end if
endsnippet

snippet elif "else if then" b
else if (${1}) then
   ${0}
endsnippet

snippet do "do" !b
do ${1:i} = ${2:1}, ${3:N}
   ${0}
end do
endsnippet
